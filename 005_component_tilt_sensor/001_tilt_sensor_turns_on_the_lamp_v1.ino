/*
 * Этот код демонстрирует работу с датчиком наклона и светодиодом.
 * При изменении состояния датчика светодиод включается или выключается.
 * Также реализована защита от дребезга контактов.
 */

int ledPin = 12;         // Пин, к которому подключен светодиод
int sensorPin = 4;       // Пин, к которому подключен датчик наклона
int sensorValue;         // Переменная для хранения текущего значения с датчика
int lastTiltState = HIGH;   // Переменная для хранения предыдущего состояния датчика

// Переменные для устранения дребезга контактов
long lastDebounceTime = 0;  // Время последнего изменения состояния датчика
long debounceDelay = 50;    // Время задержки для устранения дребезга (в миллисекундах)

void setup() {
  pinMode(sensorPin, INPUT);       // Настраиваем пин датчика как вход
  digitalWrite(sensorPin, HIGH);   // Включаем внутренний подтягивающий резистор
  pinMode(ledPin, OUTPUT);         // Настраиваем пин светодиода как выход
  Serial.begin(9600);              // Инициализируем последовательное соединение для отладки
}

void loop() {
  sensorValue = digitalRead(sensorPin);  // Читаем текущее состояние датчика

  // Если состояние датчика изменилось (например, из-за наклона или шума)
  if (sensorValue != lastTiltState) {
    lastDebounceTime = millis();  // Сбрасываем таймер устранения дребезга
  }

  // Если прошло достаточно времени с момента последнего изменения состояния
  if ((millis() - lastDebounceTime) > debounceDelay) {
    // Фиксируем текущее состояние датчика как устойчивое
    lastTiltState = sensorValue;
  }

  // Устанавливаем состояние светодиода в соответствии с текущим состоянием датчика
  digitalWrite(ledPin, lastTiltState);

  // Выводим значение датчика в монитор последовательного порта для отладки
  Serial.println(sensorValue);

  delay(500);  // Небольшая задержка для стабилизации
}